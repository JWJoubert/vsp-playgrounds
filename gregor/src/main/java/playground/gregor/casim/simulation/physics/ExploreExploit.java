/* *********************************************************************** *
 * project: org.matsim.*
 * ExploreExploit.java
 *                                                                         *
 * *********************************************************************** *
 *                                                                         *
 * copyright       : (C) 2014 by the members listed in the COPYING,        *
 *                   LICENSE and WARRANTY file.                            *
 * email           : info at matsim dot org                                *
 *                                                                         *
 * *********************************************************************** *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *   See also COPYING, LICENSE and WARRANTY file                           *
 *                                                                         *
 * *********************************************************************** */

package playground.gregor.casim.simulation.physics;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import playground.gregor.analysis.BiDirCAAnalyzer;

public class ExploreExploit {

	public static void main(String [] args) throws IOException, InterruptedException {

		for (int it = 0; it < 1000; it++) {
			for (int k = 0; k < 1; k++) {
				List<Thread> threads = new ArrayList<Thread>();
				for (int i = 0; i < 7; i++) {
					Thread t1 = new Thread(new ThreadWrapper2());
					t1.start();
					threads.add(t1);
					Thread.sleep(100);
				}
				for (Thread t : threads) {
					t.join();
				}
				Runtime.getRuntime().exec("/Users/laemmel/devel/bipedca/plot/exploration.sh");
			}
			
			for (int j = 0; j < 5; j++) { 
				Thread.sleep(200);
				BiDirCAAnalyzer.main(null);
				List<Thread> threads = new ArrayList<Thread>();
				for (int i = 0; i < 7; i++) {
					Thread t1 = new Thread(new ThreadWrapper());
					t1.start();
					threads.add(t1);
					Thread.sleep(100);
				}
				for (Thread t : threads) {
					t.join();
				}
				Runtime.getRuntime().exec("/Users/laemmel/devel/bipedca/plot/exploitation.sh");
			}

		}
	}
	public static class ThreadWrapper implements Runnable {

		@Override
		public void run() {
			try {
				CASimExperimentBi3_ZhangJ2012a_SRRS_.main(null);
			} catch (IOException e) {
				e.printStackTrace();
			}

		}

	}

	public static class ThreadWrapper2 implements Runnable {

		@Override
		public void run() {
			try {
				CASimExperimentBi3_ZhangJ2012a_RND.main(null);
			} catch (IOException e) {
				e.printStackTrace();
			}

		}

	}

}

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE config SYSTEM "http://www.matsim.org/files/dtd/config_v1.dtd">
<config>

<!-- 
SANRAL project.
Sample size: 10% sample;
Population: both private cars and commercial vehicles;
Simulation: QSim with 15 threads.
 -->

<!-- ====================================================================== -->

	<module name="controler" >
		<param name="enableLinkToLinkRouting" value="false" />

		<!-- Specifies the file format for writing events. Currently supported: txt, xml. Multiple values can be specified separated by commas (','). -->
		<param name="eventsFileFormat" value="xml" />
		<param name="firstIteration" value="0" />
		<param name="lastIteration" value="100" />
		<param name="outputDirectory" value="./output/" />

		<!-- The type of routing (least cost path) algorithm used, may have the values: Dijkstra or AStarLandmarks -->
		<param name="routingAlgorithmType" value="Dijkstra" />

		<!-- An identifier for the current run which is used as prefix for output files and mentioned in output xml files etc. -->
		<param name="runId" value="null" />

		<!-- iterationNumber % writeEventsInterval == 0 defines in which iterations events are written to a file. `0' disables events writing completely. -->
		<param name="writeEventsInterval" value="20" />
	</module>

<!-- ====================================================================== -->

	<module name="counts" >

		<!-- factor by which to re-scale the simulated values.  necessary when simulation runs with something different from 100%.  needs to be adapted manually -->
		<param name="countsScaleFactor" value="10.0" />

		<!-- distance to distanceFilterCenterNode to include counting stations. The unit of distance is the Euclidean distance implied by the coordinate system -->
		<param name="distanceFilter" value="null" />

		<!-- node id for center node of distance filter -->
		<param name="distanceFilterCenterNode" value="null" />

		<!-- input file name to counts package -->
		<param name="inputCountsFile" value="../../data/counts/2007/Counts_Wednesday_Total.xml.gz" />

		<!-- possible values: `html', `kml', `txt', `all' -->
		<param name="outputformat" value="all" />
	</module>

<!-- ====================================================================== -->

	<module name="global" >
		<param name="coordinateSystem" value="WGS84_UTM35S" />
		<param name="numberOfThreads" value="15" />
		<param name="randomSeed" value="1234" />
	</module>

<!-- ====================================================================== -->

	<module name="network" >
		<param name="inputChangeEventsFile" value="null" />
		<param name="inputNetworkFile" value="../../data/network/gautengNetwork_CleanV0.xml.gz" />
		<param name="laneDefinitionsFile" value="null" />
		<param name="timeVariantNetwork" value="false" />
	</module>

<!-- ====================================================================== -->

	<module name="otfvis" >

		<!-- The (initial) size of the agents.  Only a range of numbers is allowed, otherwise otfvis aborts rather ungracefully, or displays no agents at all. -->
		<param name="agentSize" value="120.0" />

		<!-- coloring scheme for otfvis.  Currently (2010) allowed values: ``standard'', ``bvg'' -->
		<param name="coloringScheme" value="standard" />
		<param name="leftMouseFunc" value="Zoom" />

		<!-- The (initial) width of the links of the network. Use positive floating point values. -->
		<param name="linkWidth" value="30.0" />
		<param name="middleMouseFunc" value="Pan" />
		<param name="rightMouseFunc" value="Select" />
		<param name="showTeleportation" value="false" />
	</module>

<!-- ====================================================================== -->

	<module name="planCalcScore" >

		<!-- [1/utils] conversion factor of utility model for use in logit-based choice model.  Set to 1 if your utl function is estimated -->
		<param name="BrainExpBeta" value="2.0" />
		<param name="PathSizeLogitBeta" value="1.0" />
		<param name="activityClosingTime_0" value="undefined" />
		<param name="activityClosingTime_1" value="18:00:00" />
		<param name="activityClosingTime_2" value="23:59:59" />
		<param name="activityClosingTime_3" value="undefined" />
		<param name="activityEarliestEndTime_0" value="undefined" />
		<param name="activityEarliestEndTime_1" value="undefined" />
		<param name="activityEarliestEndTime_2" value="undefined" />
		<param name="activityEarliestEndTime_3" value="undefined" />
		<param name="activityLatestStartTime_0" value="undefined" />
		<param name="activityLatestStartTime_1" value="09:00:00" />
		<param name="activityLatestStartTime_2" value="23:59:59" />
		<param name="activityLatestStartTime_3" value="undefined" />
		<param name="activityMinimalDuration_0" value="08:00:00" />
		<param name="activityMinimalDuration_1" value="07:00:00" />
		<param name="activityMinimalDuration_2" value="00:10:00" />
		<param name="activityMinimalDuration_3" value="00:00:00" />
		<param name="activityOpeningTime_0" value="undefined" />
		<param name="activityOpeningTime_1" value="07:00:00" />
		<param name="activityOpeningTime_2" value="00:00:00" />
		<param name="activityOpeningTime_3" value="undefined" />
		<param name="activityPriority_0" value="1.0" />
		<param name="activityPriority_1" value="1.0" />
		<param name="activityPriority_2" value="1.0" />
		<param name="activityPriority_3" value="1.0" />
		<param name="activityType_0" value="home" />
		<param name="activityType_1" value="work" />
		<param name="activityType_2" value="minor" />
		<param name="activityType_3" value="major" />
		<param name="activityTypicalDuration_0" value="12:00:00" />
		<param name="activityTypicalDuration_1" value="09:00:00" />
		<param name="activityTypicalDuration_2" value="00:30:00" />
		<param name="activityTypicalDuration_3" value="03:00:00" />

		<!-- [utils/hr] utility for departing early (i.e. before the earliest end time).  Probably implemented correctly, but not tested. -->
		<param name="earlyDeparture" value="-18.0" />

		<!-- [utils/hr] utility for arriving late (i.e. after the latest start time).  normally negative -->
		<param name="lateArrival" value="-18.0" />

		<!-- new_score = (1-learningRate)*old_score + learningRate * score_from_mobsim.  learning rates close to zero emulate score averaging, but slow down initial convergence -->
		<param name="learningRate" value="1.0" />

		<!-- [utils/unit_of_money] conversion of money (e.g. toll, distance cost) into utils -->
		<param name="marginalUtilityOfMoney" value="0.0" />

		<!-- DON'T USE THIS!  It is not clear if this is in [utils/m] or in [Eu/m]! -->
		<param name="marginalUtlOfDistanceCar" value="0.0" />

		<!-- DON'T USE THIS!  It is not clear if this is in [utils/m] or in [Eu/m]! -->
		<param name="marginalUtlOfDistancePt" value="0.0" />

		<!-- DON'T USE THIS!  It is not clear if this is in [utils/m] or in [Eu/m]! -->
		<param name="marginalUtlOfDistanceWalk" value="0.0" />

		<!-- [unit_of_money/m] conversion of car distance into money -->
		<param name="monetaryDistanceCostRateCar" value="0.0" />

		<!-- [unit_of_money/m] conversion of pt distance into money -->
		<param name="monetaryDistanceCostRatePt" value="0.0" />

		<!-- [utils/hr] marginal utility of doing an activity.  normally positive.  also the opportunity cost of time if agent is doing nothing. -->
		<param name="performing" value="6.0" />

		<!-- [utils/hr] utility offset of traveling by car.  normally negative.  this comes on top of the opportunity cost of time -->
		<param name="traveling" value="-6.0" />

		<!-- [utils/hr] utility offset of traveling by pt.  normally negative.  this comes on top of the opportunity cost of time -->
		<param name="travelingPt" value="-6.0" />

		<!-- [utils/hr] utility offset of traveling by foot.  normally negative.  this comes on top of the opportunity cost of time -->
		<param name="travelingWalk" value="-6.0" />

		<!-- [utils/hr] utility offset for waiting.  this comes on top of the opportunity cost of time.  Probably implemented correctly, but not tested. -->
		<param name="waiting" value="-0.0" />
	</module>

<!-- ====================================================================== -->

	<module name="plans" >
		<param name="inputPlansFile" value="../../data/plans/car-commercial_plans_2009_10pct.xml.gz" />
	</module>

<!-- ====================================================================== -->

	<module name="planscalcroute" >
		<param name="bikeSpeed" value="4.166666666666667" />
		<param name="ptSpeedFactor" value="2.0" />
		<param name="undefinedModeSpeed" value="13.88888888888889" />
		<param name="walkSpeed" value="0.8333333333333333" />
	</module>

<!-- ====================================================================== -->

	<module name="qsim" >
		<param name="startTime" value="00:00:00" />
		<param name="endTime" value="24:00:00" />
		<param name="flowCapacityFactor" value="0.1" />
		<param name="storageCapacityFactor" value="0.28" />

		<!-- Use number of threads > 1 for parallel version using the specified number of threads -->
		<param name="numberOfThreads" value="15" />

		<!-- Boolean. `true': stuck vehicles are removed, aborting the plan; `false': stuck vehicles are forced into the next link. `false' is probably the better choice. -->
		<param name="removeStuckVehicles" value="true" />

		<!-- Comma-separated list of visualizer output file formats.  'plansfile', `transims', `googleearth', and `otfvis'.  'netvis' is, I think, no longer possible. -->
		<param name="snapshotFormat" value="googleearth,otfvis" />

		<!-- snapshotStyle: `equiDist' (vehicles equidistant on link) or `queue' (vehicles queued at end of link) -->
		<param name="snapshotStyle" value="equiDist" />
		<param name="snapshotperiod" value="00:05:00" />

		<!-- time in seconds.  Time after which the frontmost vehicle on a link is called `stuck' if it does not move. -->
		<param name="stuckTime" value="100.0" />
		<param name="timeStepSize" value="00:00:01" />
	</module>

<!-- ====================================================================== -->

	<module name="roadpricing" >
	</module>

<!-- ====================================================================== -->

	<module name="scenario" >

		<!-- Set this parameter to true if households should be used, false if not. -->
		<param name="useHouseholds" value="false" />

		<!-- Set this parameter to true if knowledge should be used, false if not. -->
		<param name="useKnowledge" value="true" />

		<!-- Set this parameter to true if lanes should be used, false if not. -->
		<param name="useLanes" value="false" />

		<!-- Set this parameter to true if roadpricing should be used, false if not. -->
		<param name="useRoadpricing" value="false" />

		<!-- Set this parameter to true if signal systems should be used, false if not. -->
		<param name="useSignalsystems" value="false" />

		<!-- Set this parameter to true if transit should be simulated, false if not. -->
		<param name="useTransit" value="false" />

		<!-- Set this parameter to true if vehicles should be used, false if not. -->
		<param name="useVehicles" value="false" />
	</module>

<!-- ====================================================================== -->

	<module name="simulation" >
		<param name="startTime" value="00:00:00" />
		<param name="endTime" value="24:00:00" />
		<param name="flowCapacityFactor" value="0.1" />
		<param name="storageCapacityFactor" value="0.28" />

		<!-- Boolean. `true': stuck vehicles are removed, aborting the plan; `false': stuck vehicles are forced into the next link. `false' is probably the better choice. -->
		<param name="removeStuckVehicles" value="true" />

		<!-- Comma-separated list of visualizer output file formats.  'plansfile', `transims', `googleearth', and `otfvis'.  'netvis' is, I think, no longer possible. -->
		<param name="snapshotFormat" value="googleearth,otfvis" />

		<!-- snapshotStyle: `equiDist' (vehicles equidistant on link) or `queue' (vehicles queued at end of link) -->
		<param name="snapshotStyle" value="equiDist" />
		<param name="snapshotperiod" value="00:05:00" />

		<!-- time in seconds.  Time after which the frontmost vehicle on a link is called `stuck' if it does not move. -->
		<param name="stuckTime" value="100.0" />
		<param name="timeStepSize" value="00:00:01" />
		<param name="timeout" value="3600" />
	</module>

<!-- ====================================================================== -->

	<module name="strategy" >
		<param name="ExternalExeConfigTemplate" value="null" />
		<param name="ExternalExeTimeOut" value="3600" />
		<param name="ExternalExeTmpFileRootDir" value="null" />

		<!-- iteration after which module will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...) -->
		<param name="ModuleDisableAfterIteration_1" value="null" />

		<!-- iteration after which module will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...) -->
		<param name="ModuleDisableAfterIteration_2" value="null" />

		<!-- iteration after which module will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...) -->
		<param name="ModuleDisableAfterIteration_3" value="null" />

		<!-- path to external executable (if applicable) -->
		<param name="ModuleExePath_1" value="null" />

		<!-- path to external executable (if applicable) -->
		<param name="ModuleExePath_2" value="null" />

		<!-- path to external executable (if applicable) -->
		<param name="ModuleExePath_3" value="null" />

		<!-- probability that a strategy is applied to a given a person.  despite its name, this really is a ``weight'' -->
		<param name="ModuleProbability_1" value="0.8" />

		<!-- probability that a strategy is applied to a given a person.  despite its name, this really is a ``weight'' -->
		<param name="ModuleProbability_2" value="0.1" />

		<!-- probability that a strategy is applied to a given a person.  despite its name, this really is a ``weight'' -->
		<param name="ModuleProbability_3" value="0.1" />

		<!-- name of strategy (if not full class name, resolved in StrategyManagerConfigLoader) -->
		<param name="Module_1" value="SelectExpBeta" />

		<!-- name of strategy (if not full class name, resolved in StrategyManagerConfigLoader) -->
		<param name="Module_2" value="ReRoute" />

		<!-- name of strategy (if not full class name, resolved in StrategyManagerConfigLoader) -->
		<param name="Module_3" value="TimeAllocationMutator" />

		<!-- maximum number of plans per agent.  ``0'' means ``infinity''.  Currently (2010), ``5'' is a good number -->
		<param name="maxAgentPlanMemorySize" value="5" />
	</module>

<!-- ====================================================================== -->

	<module name="travelTimeCalculator" >
		<param name="calculateLinkToLinkTravelTimes" value="false" />
		<param name="calculateLinkTravelTimes" value="true" />
		<param name="travelTimeAggregator" value="optimistic" />

		<!-- The size of the time bin (in sec) into which the link travel times are aggregated for the router -->
		<param name="travelTimeBinSize" value="600" />
		<param name="travelTimeCalculator" value="TravelTimeCalculatorArray" />
	</module>

<!-- ====================================================================== -->

</config>
